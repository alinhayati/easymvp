apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka-android'


def devId = 'alinhayati'
def devName = 'Ali Nemati Hayati'
def devEmail = 'alinhayati@gmail.com'
def libGroup = 'com.digigene.android'
def libName = 'easy-mvp'
def libDescription = 'Easy MVP framework for android'
def libUrl = 'https://github.com/digigene/easymvp'
def libGitUrl = "$libUrl" + ".git"
def licName = 'The Apache Software License, Version 2.0'
def licType = ["Apache-2.0"]
def licUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

def majorNumber = 1
def minorNumber = 0
def patchNumber = 9

def _versionCode = majorNumber + minorNumber + patchNumber
def _versionName = "$majorNumber" + "." + "$minorNumber" + "." + "$patchNumber"

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode _versionCode
        versionName "$_versionName"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

ext {
    bintrayRepo = 'maven'
    bintrayName = "$libName"

    publishedGroupId = "$libGroup"
    libraryName = "$libName"
    artifact = "$libName"

    libraryDescription = "$libDescription"

    siteUrl = "$libUrl"
    gitUrl = "$libGitUrl"

    libraryVersion = "$_versionName"

    developerId = "$devId"
    developerName = "$devName"
    developerEmail = "$devEmail"

    licenseName = "$licName"
    licenseUrl = "$licUrl"
    allLicenses = licType
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.0'
    // RxJava/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

repositories {
    mavenCentral()
}

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                     // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("kotlin")) { //Kotlin libraries
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.srcDirs
//    }

    task javadoc(type: Javadoc, dependsOn: dokka) {

    }
} else if (project.hasProperty("android")) { // Android libraries
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.srcDirs
//    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
//    task sourcesJar(type: Jar, dependsOn: classes) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'